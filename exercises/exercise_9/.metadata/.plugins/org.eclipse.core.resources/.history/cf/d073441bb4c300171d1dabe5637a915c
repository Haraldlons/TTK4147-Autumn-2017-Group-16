#include <stdlib.h>
#include <stdio.h>
#include <unistd.h>
#include <errno.h>
#include <string.h>
#include <fcntl.h>
#include <sys/dispatch.h>
#include <sys/mman.h>
#include <pthread.h>

struct pid_data{
	pthread_mutex_t pid_mutex;
	pid_t pid;
};

int main(int argc, char *argv[]) {
	int file_desc = shm_open("/sharedpid", O_RDWR, S_IRWXU);
	void* data = mmap(0, sizeof(struct pid_data), PROT_READ|PROT_WRITE, MAP_SHARED, file_desc, 0);
	struct pid_data* dat = (struct pid_data*) data;

	pthread_mutex_lock(&dat->pid_mutex);
	printf("%i \n", &dat->pid);
	pthread_mutex_unlock(&dat->pid_mutex);

	return EXIT_SUCCESS;
}
